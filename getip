#!/bin/sh

# getip's version/copyright
GETIP_VERSION="1.0.3"
GETIP_COPYRIGHT="Copyright (C) 2021-2022 Mahdi Mirzade"

# Handle arguments
filename="$0"
subcommand="$(echo "$1" | sed 's/-//g')"

# Grab public IP address
publicIP () {
	RESOLVERS='@resolver1.opendns.com @resolver2.opendns.com @resolver3.opendns.com @resolver4.opendns.com'
	for resolver in $RESOLVERS ; do
		PUBLIC_IP="$(dog --short myip.opendns.com "$resolver")"
		[ -n "$PUBLIC_IP" ] && break
	done
}

# Grab private IP address
privateIP () {
	case "$(uname)" in
		Darwin*|FreeBSD*)
			PRIVATE_IP=$(ifconfig | grep "inet " | grep -Fv 127.0.0.1 | awk '{print $2}')
		;;
		Linux*)
			PRIVATE_IP=$(ip address | grep 'inet ' | grep 'scope global' | grep '[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}' -o | head -1)
		;;
	esac
}

# Grab IP's geolocation information
geolocation () {
	publicIP
	curl -s "http://ipwhois.app/json/$PUBLIC_IP"
}

# Grab usage manual
usage () {
printf "Usage: %s [METHOD]\n
General Methods:
    h,  help            Show this manual
    v,  version         Show version number\n
IP Information Methods:
    pub,    public      Get Your Public IP Address
    priv,   private     Get Your Private IP Address
    j,      json        Get Your Public IP's Full Information in Json\n
Other methods can be also grabbed from json output,
    for example this is your json output:
    \033[34m{
        ...
        \"continent\": \"Europe\",
        \"country\": \"Germany\",
        \"region\": \"Bavaria\",
        \"city\": \"Nuremberg\",
        \"latitude\": 49.4254092,
        \"longitude\": 11.0796553,
        ...
    }\033[0m
    and if you want to get IP's country:
    \033[34m$ %s country
    Output: Germany\033[0m\n\n" "$filename" "$filename"
}

version () {
printf "\n\tgetip (Geolocation, Private/Public IP) v$GETIP_VERSION
\t$GETIP_COPYRIGHT

\tThis program may be freely redistributed under
\tthe terms of the MIT License.\n\n"
}

case "$subcommand" in
	[Pp][Rr][Ii][Vv][Aa][Tt][Ee]|[Pp][Rr][Ii][Vv])
		privateIP
		printf "$PRIVATE_IP\n"
	;;
	[Pp][Uu][Bb][Ll][Ii][Cc]|[Pp][Uu][Bb])
		publicIP
		printf "$PUBLIC_IP\n"
	;;
	[Jj][Ss][Oo][Nn]|[Jj])
		geolocation | jq
	;;
	[Vv][Ee][Rr][Ss][Ii][Oo][Nn]|[Vv])
		version
	;;
	[Hh][Ee][Ll][Pp]|[Hh])
		usage
	;;
	*)
		if [ -n "$subcommand" ]; then
			data=$(geolocation)
			var=$(echo $data | jq ".${subcommand}" | sed 's|"||')
		fi
		if [ -n "$var" ] && [ "$var" != "null" ]; then
			printf "$var\n"
		else
			usage
		fi
	;;
esac
